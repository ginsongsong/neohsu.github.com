<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Learn Or Die]]></title>
  <link href="http://NeoHsu.github.io/atom.xml" rel="self"/>
  <link href="http://NeoHsu.github.io/"/>
  <updated>2014-02-04T23:52:30+08:00</updated>
  <id>http://NeoHsu.github.io/</id>
  <author>
    <name><![CDATA[Neo Hsu]]></name>
    <email><![CDATA[NeoHsuDroid@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[HowTo: ListView Optimization About Custom Adapter and Layout]]></title>
    <link href="http://NeoHsu.github.io/blog/2013/12/13/howto-listview-optimization-about-custom-adapter-and-layout/"/>
    <updated>2013-12-13T23:08:46+08:00</updated>
    <id>http://NeoHsu.github.io/blog/2013/12/13/howto-listview-optimization-about-custom-adapter-and-layout</id>
    <content type="html"><![CDATA[<p>Adapter 的作用就是 ListView 與資料之間的橋樑，當 ListView 中每一個 Item 顯示到螢幕上時，都會調用 Adapter 的 getView 方法返回一個View，因此當 ListView 在處理 Scroll 事件時，會反覆的調用 getView 方法去顯示頁面，使頁面不斷的重複建立相同的 View ，因此會產生記憶體不足而導致閃退或是滾動不夠順暢的狀況；由此可見我們應該要在調用 getView 方法時做些優化，以增進 ListView 的效能</p>

<p>ListView 優化的思路整理以下兩種：</p>

<ol>
<li>View 的重復使用：<br/>
View 每次創建是比較耗費時間的動作，因此對於 getView 方法傳入的 converView 應該充分利用 Null 的判斷</li>
<li>ViewHolder 的應用：<br/>
View 在調用 findViewById 方法也是比較耗時的，因此需要考慮只調用一次，之後就調用 View.getTag 方法來取得 ViewHolder 物件</li>
</ol>


<h2>BaseAdapter Example</h2>

<p>繼承 BaseAdapter 之後需要重寫四個方法：getCount，getItem，getItemId 和 getView</p>

<ol>
<li><p>BaseAdapter 一開始會先調用 getCount 來計算將會顯示的 Item 數，因此我們需先回傳該值
<pre class="prettyprint java">
@Override
public int getCount() {
   // TODO Auto-generated method stub
   return rowItems.size();
}
</pre></p></li>
<li><p>為了反覆取用之前已建立過的 View，我們利用 ViewHolder 保存已建立的 View；這邊可以存取 Item 中所顯示的元件
<pre class="prettyprint java">
private class ViewHolder {
   ImageView imageView;
   TextView txtTitle;
   TextView txtDesc;
}
</pre></p></li>
<li><p>當 BaseAdapter 調用 getView 時，我們可以從 converView 中確認 View 是否存在，如果存在則從 ViewHolder 中取出，如果未存在則建立新的 View 並設定 tag 記錄已建立過；當指定好 Holder 後，便利用 Holder 去執行所需要的配置與相對應的事件了
<pre class="prettyprint java">
@Override
public View getView(int position, View convertView, ViewGroup parent) {
   // TODO Auto-generated method stub
   ViewHolder holder = null;</p>

<p>   LayoutInflater mInflater = (LayoutInflater) context.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);
   if(convertView == null){
      convertView = mInflater.inflate(R.layout.list_item, null);
      holder = new ViewHolder();
      holder.txtDesc = (TextView) convertView.findViewById(R.id.desc);
      holder.txtTitle = (TextView) convertView.findViewById(R.id.title);
      holder.imageView = (ImageView) convertView.findViewById(R.id.icon);
      convertView.setTag(holder);
   }else{
      holder = (ViewHolder) convertView.getTag();
   }</p>

<p>   RowItem rowItem = (RowItem) getItem(position);</p>

<p>   holder.txtDesc.setText(rowItem.getDesc());
   holder.txtTitle.setText(rowItem.getTitle());
   holder.imageView.setImageResource(rowItem.getImageId());</p>

<p>   return convertView;
}
</pre></p></li>
</ol>


<blockquote><p>BaseAdapter 完整範例的原始碼 <a href="https://github.com/NeoHsu/CustomListViewWithBaseAdapter">GitHub &ndash; NeoHsu/CustomListViewWithBaseAdapter</a></p></blockquote>

<h2>CursorAdapter Example</h2>

<p></p>


<p>使用 CursorAdapter 只需要重寫兩個方法：newView，bindView；CursorAdapter 和 BaseAdapter 有些許的不同，因為 BaseAdapter 主要是調用 getView 方法去建立與判斷 View 是否存在，而 CursorAdapter 有兩種方式： newView 和 bindView 可以被調用，newView 主要負責建立 View ， bindView 則是負責處理建立好的 View ，且由於 CursorAdapter 的資料是屬於動態綁定，因此對於建立好的 View 它並不會重新再建立一次，而是藉由 bindView 去對應資料與配置，與 BaseAdapter 運作方式有些許不同但實作的原理是相同的</p>

<div><script src='https://gist.github.com/7972655.js?file=ContactAdapterForCursor.java'></script>
<noscript><pre><code>class ContactAdapter extends CursorAdapter {
  private LayoutInflater mInflater;
  
  public ContactAdapter(Context context, Cursor c) {
    super(context, c);
    mInflater = LayoutInflater.from(context);   
  }

  @Override
  public void bindView(View view, Context context, Cursor cursor) {
    ViewHolder holder = (ViewHolder)view.getTag();
    holder.name.setText(cursor.getString(holder.nameIndex));
    holder.number.setText(cursor.getString(holder.numberIndex));
  }

  @Override
  public View newView(Context context, Cursor cursor, ViewGroup parent) {
    View view = mInflater.inflate(R.layout.contactlist_row, parent, false);
    ViewHolder holder = new ViewHolder();
    holder.name = (TextView)view.findViewById(R.id.name);
    holder.number = (TextView)view.findViewById(R.id.number);
    holder.nameIndex = cursor.getColumnIndex(&quot;contact_name&quot;);
    holder.numberIndex = cursor.getColumnIndex(&quot;contact_number&quot;);
    view.setTag(holder);
    return view;    
  }

  private static class ViewHolder {
    int nameIndex;
    int numberIndex;
    TextView name;
    TextView number;
  }
}</code></pre></noscript></div>


<h2>Summary</h2>

<p>增加 ListView 效能的主要方式不外乎是減少 View 的建立與重複的使用已建立過的物件；由於 CursorAdapter 屬於動態資料綁定，因此當資料做修正後，並不需要去更新 Adapter 的對應；BaseAdapter 則需更新完資料後，調用 notifyDataSetChanged 方法才能更新 ListView</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Talk About ListView Adapter on Android]]></title>
    <link href="http://NeoHsu.github.io/blog/2013/12/12/talk-about-listview-and-adapter-on-android/"/>
    <updated>2013-12-12T23:02:24+08:00</updated>
    <id>http://NeoHsu.github.io/blog/2013/12/12/talk-about-listview-and-adapter-on-android</id>
    <content type="html"><![CDATA[<p>在 Android 開發過程中，ListView 和 Adapter 有著密不可分的關係；Adapter 主要負責 Data 和 ListView 之間資料配置與 Layout 佈局的媒介，因此在實作 Custom ListView 時，常會針對 Adapter 組件去做客製化的設計；下面將介紹 Adapter 和 ListView 之間的運作原理並說明不同資料形態的 Adapter 運作模式</p>

<p></p>


<h1>ListView &amp; Adapter</h1>

<p><img src="http://NeoHsu.github.io/images/SVG/0-talk-about-listview-and-adapter-on-android.png"></p>

<p>一般而言 ListView 是由以下三個元素所组成，</p>

<ol>
<li>View：<br/>
用來顯示 ListView 中每一個 Item 所要呈現的配置</li>
<li>Adapter：<br/>
將不同的資料對應到 View 中，不同的資料使用不同的 Adapter 去做對應，如 ArrayAdapter，CursorAdapter，SimpleAdapter 等，Adapter 會將資料對應到 ListView Item 的 View 中來呈現資料</li>
<li>Data：<br/>
Adapter 所需要對應的資料來源，資料形態可以是字串或圖片，儲存資料的媒介可以是 ArrayList 或 Cursor 並透過 Adapter 將資料放到 Item 中；所有的資料會顯示到 ListView 上都是透過 Adapter 來完成</li>
</ol>


<p>根據上圖我們可以知道當使用 ListView 時，我們會先將要放入 ListView 的資料丟入 Adapter 中， Adapter 透過 XML 中 Layout 的佈局去配置每個 Item 的樣式與資料，最後再將配置好的佈局放入 ListView 中呈現出我們所設定的樣式；事實上系統已有預設的 Adapter 可以運用，但有時候並不能滿足我們的需求，因此要實現複雜的 ListView 可以透過繼承 Adapter 並重寫相對應的方法即可；以下將介紹一下透過不同 Adapter 的運作過程</p>

<p></p>


<h1>BaseAdapter &amp; CursorAdapter</h1>

<p>我們知道如果要實作較為複雜的 ListView 需要去針對 Adapter 去做修改；以下將介紹透過不同 Adapter 去操控 ListView 的運作過程</p>

<blockquote><p>BaseAdapter：通用的Adapter 讓你可以處理任何你想要的動作，但是必須做更多的編碼去處理相對應事件</p>

<p>ArrayAdapter：BaseAdapter 的擴展，它可以用在資料形態為 ArrayList 的情況</p>

<p>CursorAdapter：BaseAdapter 的擴展，主要用於當資料形態是 Cursor 的情況</p></blockquote>

<h2>BaseAdapter</h2>

<p><img src="http://NeoHsu.github.io/images/SVG/1-talk-about-listview-and-adapter-on-android.svg"></p>

<p>根據上圖我們可以知道 BaseAdapter 的運作模式，當 ListView 受到 Scroll 事件響應的時候，ListView 會先調用 getCount 去和後端資料取得 Item 個數，並調用 getView 方法去繪製每個要呈現的 Item View ；如果要取得某一列的內容就會調用 getItem 這個方法；如要取得某一列的 Id 就可以調用 getItemId 方法去實現</p>

<h2>CursorAdapter</h2>

<p><img src="http://NeoHsu.github.io/images/SVG/2-talk-about-listview-and-adapter-on-android.svg"></p>

<p>由上圖可以看出使用 CursorAdapter 時，當 ListView 產生 Scroll 事件後，會去取得目前 Cursor 位置，如果顯示的 Item 需要被繪製 View 的時候，會調用 newView 去繪製 Item ，如果不需要重新繪製則調用 bindView 去做顯示的動作</p>

<p>因此我們可以知道在 CursorAdapter 中 ListView 不是每次都會調用 newView ，所以每個 Item View 只會被實體化一次。而每次要繪製 Item 之前一定會調用 bindView ；如果記錄被修改了在 ListView 中也會被更新，這種方式是動態綁定資料。如果要實現資料的延遲加載，可以在 bindView 中先加載資料，再啟動 Thread 更新資料</p>

<h2>Summary</h2>

<p>由上面我們可以知道整個 ListView &amp; Adaper 呈現的運作模式與相互關係，在這邊我們可以發現其實在整個 Adapter 的做法中，當我們不斷地在進行 Scroll 動作時，它會不斷地調用 getView 的動作，導致系統不斷的建立 View ，不斷的將畫面繪製在螢幕上，因此會導致手機的暫存空間不足導致程式閃退問題</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Talk About View Component On Android]]></title>
    <link href="http://NeoHsu.github.io/blog/2013/12/11/talk-about-view-component-on-android/"/>
    <updated>2013-12-11T22:51:29+08:00</updated>
    <id>http://NeoHsu.github.io/blog/2013/12/11/talk-about-view-component-on-android</id>
    <content type="html"><![CDATA[<p><img src="http://NeoHsu.github.io/images/SVG/1-talk-about-view-component-on-android.svg"></p>

<p>在 Android 開發中，我認為了解 View 的執行過程有助於提高介面呈現的效率，可以幫助一些複雜 Layout 在適當的時機中處理，或是可以減少不必要的畫面重製，這些都是對於 View 的執行過程有很大的關聯</p>

<p>Android 中 View 的呈現主要經過 Mesure, Layout 和 Draw 這三個過程：</p>

<h2>Mesure</h2>

<p>此階段主要是負責計算 view 佔用的大小，簡單的說就是將 match_parent 和 wrap_content 轉成目前顯示的實際大小；透過 onMeasure(widthMeasureSpec, heightMeasureSpec) 方法去處理計算 View 在目前螢幕上顯示的區塊大小</p>

<blockquote><p>View 的大小是有 Parent View 和自己的大小决定而不是單一個 View 來决定，因此需要配合自己的 Sub-View 去做計算調整</p></blockquote>

<h2>Layout</h2>

<p>當 View 配置好大小後，便讀取設定好的 Layout 配置，將 Layout 佈局放到建立好的 View 中並計算出 View 在螢幕上的座標；透過 onLayout(int l, int t, int r, int b )方法去處理</p>

<blockquote><p>處理組件的佈局通常要重寫 onMesure 和 onLayout 這兩個方法</p></blockquote>

<h2>Draw</h2>

<p>Draw 過程中主要是先畫 Drawable 背景，需注意的是背景 Drawable 的實際大小會影響 View 的大小； Draw 過程會調用 onDraw(Canvas canvas) 方法去繪製背景，之後再透過 dispatchDraw(Canvas canvas) 方法分發給 Sub-View 進行繪製，值得注意的是 ViewGroup 在繪製時，如果它沒有背景則直接調用的是 dispatchDraw() 方法，繞過了 draw() 方法，當它有背景的時候就調用 draw() 方法，而 draw() 方法裡包含了 dispatchDraw() 方法的調用</p>

<blockquote><p>自定組件時通常是重寫 onDraw() 方法，而在 ViewGroup 上繪製東西的時候往往重寫的是 dispatchDraw() 方法</p></blockquote>

<h2>Summary</h2>

<p>Android 中所有畫面都是用 Canvas 根據座標去畫出來的結果，因此每次當 View 改變的時候，需要再去重新計算與繪製一個 View 來產生出畫面來</p>

<p>可想而知在 ListView 中，我們不斷地 onScroll 時，如果沒做一些效能處理與緩存的處理，它的運作模式將會是不斷地重新繪製畫面；因為當每次移動 Scroll 時都會進行 getView 的動作，之後便開始一連串產生 View 的行為</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Error : ADB Server didn't ACK on Windows]]></title>
    <link href="http://NeoHsu.github.io/blog/2013/11/28/solve-adb-server-didnt-ack-on-windows/"/>
    <updated>2013-11-28T23:40:27+08:00</updated>
    <id>http://NeoHsu.github.io/blog/2013/11/28/solve-adb-server-didnt-ack-on-windows</id>
    <content type="html"><![CDATA[<h1>Outline</h1>

<p>產生ADB Server didn&rsquo;t ACK 問題的主要原因為 ADB Server 的 Port 绑定失败，因此只需要關閉 Adb Server 所需綁定的 Port 上佔用的程序即可；我是在使用 Windows 系統時，自動啟動的 QQ 即時通訊軟體使 ADB Server 需綁定的 Port 被佔用，因此產生此問題</p>

<p></p>


<h2>Quit Eclipse &amp; Open Command Line</h2>

<p>關閉 Eclipse 使 android 的 adb與Eclipse 間的連結關閉，並打開 commad line ，切換目錄到 Android SDK 目錄中 platform-tools 資料夾裡</p>

<blockquote><p>切換到 platform-tools 資料夾中是為了使用 adb 工具，如果有有將 platform-tools 資料夾路徑加到環境變數中可以不需要切換</p></blockquote>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span>
<span class='line-number'>&nbsp;</span></pre></td><td class='code'><pre><code><span class='line command'>D:\Application\adt-bundle-windows\sdk\platform-tools > dir</span><span class='line output'>NOTICE.txt  adb  api  fastboot  source.properties  systrace</span></code></pre></td></tr></table></div></div>
        </div>


<h2>Turn Off ADB Server &amp; Turn On ADB Server Again</h2>

<p>關閉並重新啟動 ADB Server</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span>
<span class='line-number'>$</span>
<span class='line-number'>&nbsp;</span>
<span class='line-number'>&nbsp;</span>
<span class='line-number'>&nbsp;</span>
<span class='line-number'>&nbsp;</span>
<span class='line-number'>&nbsp;</span>
<span class='line-number'>&nbsp;</span>
<span class='line-number'>&nbsp;</span></pre></td><td class='code'><pre><code><span class='line command'>adb kill-server</span><span class='line command'>adb start-server</span><span class='line output'>#啟動服務成功顯示畫面如下
</span><span class='line output'>* daemon not running. starting it now on port 5037 *
</span><span class='line output'>* daemon started successfully * 
</span><span class='line output'>#啟動服務失敗顯示畫面如下
</span><span class='line output'>* daemon not running. starting it now * 
</span><span class='line output'>* ADB server didn't ACK *
</span><span class='line output'>* failed to start daemon *</span></code></pre></td></tr></table></div></div>
        </div>


<h2>IF Failed To Start ADB Server</h2>

<p>如果前面步驟還沒成功啓動 ADB Server ，則需要查詢有哪些程序佔用了 ADB Server 的 port</p>

<blockquote><p>ADB Server 預設Port爲5037</p></blockquote>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span>
<span class='line-number'>&nbsp;</span>
<span class='line-number'>&nbsp;</span>
<span class='line-number'>&nbsp;</span>
<span class='line-number'>&nbsp;</span>
<span class='line-number'>&nbsp;</span>
<span class='line-number'>&nbsp;</span></pre></td><td class='code'><pre><code><span class='line command'>netstat -ano | findstr "5037"</span><span class='line output'>TCP    127.0.0.1:1159         127.0.0.1:5037         ESTABLISHED     2492
</span><span class='line output'>TCP    127.0.0.1:5037         0.0.0.0:0              LISTENING       2796
</span><span class='line output'>TCP    127.0.0.1:5037         127.0.0.1:1159         ESTABLISHED     2796
</span><span class='line output'>TCP    127.0.0.1:5037         127.0.0.1:1349         TIME_WAIT       0
</span><span class='line output'>TCP    127.0.0.1:5037         127.0.0.1:1350         TIME_WAIT       0
</span><span class='line output'>TCP    127.0.0.1:5037         127.0.0.1:1353         TIME_WAIT       0</span></code></pre></td></tr></table></div></div>
        </div>


<h2>Kill Task &amp; Start ADB Server</h2>

<p>如果有查詢到佔用的 5037 port 的 Task，則用 taskkill 指令根據 PID 刪除它；並重新啟動 ADB Server</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span>
<span class='line-number'>$</span>
<span class='line-number'>$</span>
<span class='line-number'>&nbsp;</span>
<span class='line-number'>&nbsp;</span></pre></td><td class='code'><pre><code><span class='line command'>taskkill /F /PID 2796</span><span class='line command'>taskkill /F /PID 2492</span><span class='line command'>adb start-server</span><span class='line output'>* daemon not running. starting it now on port 5037 *
</span><span class='line output'>* daemon started successfully *</span></code></pre></td></tr></table></div></div>
        </div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup Octopress under Mac OS X]]></title>
    <link href="http://NeoHsu.github.io/blog/2013/11/28/setup-octopress-under-mac-os-x/"/>
    <updated>2013-11-28T21:30:08+08:00</updated>
    <id>http://NeoHsu.github.io/blog/2013/11/28/setup-octopress-under-mac-os-x</id>
    <content type="html"><![CDATA[<h1>Outline</h1>

<ul>
<li>在 Mac 上建置 Octopress 環境撰寫 Blog</li>
<li>安裝 Mac 的第三方套件庫 ( Homebrew ) 建置 Ruby 環境</li>
</ul>


<p></p>


<h1>Install Homebrew &amp; Ruby</h1>

<h2>Install Homebrew</h2>

<p>Homebrew 是一套在 Mac OS X 下使用的套件管理工具，以往大家會使用 Mac Ports ，但是 Port 的套件相依性太深，常常會為了裝個小套件而跟著裝上一堆用不到的相依套件； Homebrew 則盡量依賴系統內已經有的套件、它的套件 formula 是用簡單的 Ruby 寫的，所以你可以 fork Homebrew repository 自行修改維護、它自己用 Git 管理自己，升級十分方便；Homebrew 安裝好套件後不會幫你做 symlink 到 /usr/local ，避免你的原生系統內還有相同的套件因而不相容而打架</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go/install)"</span></code></pre></td></tr></table></div></div>
        </div>


<h2>Use Homebrew Install rbenv &amp; ruby-build</h2>

<p>rbenv 是用來管理 Ruby 版本控制的工具，ruby-build 則是用來編譯安裝 Ruby</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>brew install rbenv ruby-build</span></code></pre></td></tr></table></div></div>
        </div>


<h2>Add Environment Variables</h2>

<p>設定 rbenv 的路徑並確保有 rbenv 工具；依照你使用的環境去設定各自的環境變數 ( zprofile / bash_profile )</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span>
<span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>echo 'export RBENV_ROOT=/usr/local/var/rbenv' >> ~/.zprofile</span><span class='line command'>echo 'if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi' >> ~/.zprofile</span></code></pre></td></tr></table></div></div>
        </div>


<blockquote><p>修改完環境變數的檔案要重新讀入環境設定檔 source ~/.zprofile</p></blockquote>

<h2>Use rbenv Install Ruby &amp; Check Ruby Versions</h2>

<p>利用 rbenv 安裝各版本的 Ruby ，* 顯示目前在此目錄下使用的 Ruby 版本</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span>
<span class='line-number'>$</span>
<span class='line-number'>&nbsp;</span>
<span class='line-number'>&nbsp;</span></pre></td><td class='code'><pre><code><span class='line command'>rbenv install 1.9.3-p448</span><span class='line command'>rbenv versions</span><span class='line output'>* system (set by /usr/local/var/rbenv/version)
</span><span class='line output'>  1.9.3-p448</span></code></pre></td></tr></table></div></div>
        </div>


<h2>Setting Ruby Version to Build Octopress</h2>

<p>進入從 github 上 clone 下來的 Octopress 目錄中，設定要編譯 Octopress 的 Ruby 版本</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span>
<span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>cd ~/Octopress</span><span class='line command'>echo '1.9.3-p448' > .ruby-version</span></code></pre></td></tr></table></div></div>
        </div>


<h2>Restart Terminal &amp; Check Ruby Version</h2>

<p>重新啟動 Terminal 並進入 Octopress 目錄下檢查當前目錄使用的 Ruby 版本</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span>
<span class='line-number'>&nbsp;</span>
<span class='line-number'>&nbsp;</span></pre></td><td class='code'><pre><code><span class='line command'>rbenv versions</span><span class='line output'>  system
</span><span class='line output'>* 1.9.3-p448 (set by /Users/neohsu/Blog/.ruby-version)</span></code></pre></td></tr></table></div></div>
        </div>


<h1>Setup &amp; Use Octopress</h1>

<h2>Setup Octopress</h2>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span>
<span class='line-number'>&nbsp;</span>
<span class='line-number'>$</span>
<span class='line-number'>$</span>
<span class='line-number'>&nbsp;</span>
<span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>gem install bundler</span><span class='line output'># If you use rbenv, rehash to be able to run the bundle command
</span><span class='line command'>rbenv rehash</span><span class='line command'>bundle install</span><span class='line output'># 如果是第一次安装 Octopress ，需要先安装預設的 theme ( rake install )
</span><span class='line command'>rake install</span></code></pre></td></tr></table></div></div>
        </div>


<h2>Use Octopress</h2>

<p></p>


<ol>
<li>建立文章</li>
<li>編譯 Markdown 文章</li>
<li>預覽</li>
</ol>


<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span>
<span class='line-number'>&nbsp;</span>
<span class='line-number'>$</span>
<span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>rake new_post["Zombie Ninjas Attack: A survivor's retrospective"]</span><span class='line output'># Creates source/_posts/2011-07-03-zombie-ninjas-attack-a-survivors-retrospective.markdown
</span><span class='line command'>rake generate   # Generates posts and pages into the public directory</span><span class='line command'>rake preview    # Watches, and mounts a webserver at http://localhost:4000</span></code></pre></td></tr></table></div></div>
        </div>


<p>如果你的 Shell 是用 zsh 的話，上面這個指令可能會讓你出現這樣的狀況：</p>

<blockquote><p>  zsh : no matches found : new_post[how-to-instala-octopresa]</p></blockquote>

<p>如果遇到這個狀況的話，你可改一下你的 .zshrc ，加上這行：</p>

<blockquote><p>alias rake=&ldquo;noglob rake&rdquo;</p></blockquote>

<p>或是改一下原來的 rake 指令：</p>

<blockquote><p>rake &ldquo;new_post[how-to-install-octopress]&rdquo;</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tag cloud for Octopress]]></title>
    <link href="http://NeoHsu.github.io/blog/2012/06/27/tag-cloud-for-octopress/"/>
    <updated>2012-06-27T16:10:00+08:00</updated>
    <id>http://NeoHsu.github.io/blog/2012/06/27/tag-cloud-for-octopress</id>
    <content type="html"><![CDATA[<p>Octopress的預設畫面沒有將分類標籤獨立出來，讓搜尋文章類別很不方便，因此標籤雲這東西就相對的重要，網路上找了一下相關的plugin，以下說明一下安裝與設定過程。</p>

<h1>Installation steps</h1>

<ol>
<li>Download plugin</li>
<li>Move file</li>
<li>Edit config</li>
<li>Compile octopress</li>
</ol>


<p></p>


<h1>Download plugin</h1>

<ol>
<li>下載Plugin相關檔案
<a href="https://github.com/tokkonopapa/octopress-tagcloud">GitHub &ndash; tokkonopapa/octopress-tagcloud</a></li>
<li>Plugin相關檔案</li>
</ol>


<pre><code>.
├─ plugins/
│  └── tag_cloud.rb  Plugin主程式(抓取文章中的類別並丟入設定的模板中)
└─ source/
   └─ _includes/
      └─ custom/
         └─ asides/
            ├─ category_list.html 分類標籤列表模板
            └─ tag_cloud.html     分類標籤雲模板
</code></pre>


<p></p>


<h1>Move file</h1>

<p>將檔案移動到Octopress對應的位置</p>

<p></p>


<h1>Edit config</h1>

<ol>
<li>編輯_config.yml<br/>
default_asides 是設定Blog側邊欄所要放置的模板，我選擇了tag_cloud.html去作類別的顯示；<br/>
使用的模板位置 <span style="color:#F62217">custom/asides/tag_cloud.html</span></li>
</ol>


<pre class="prettyprint yml">
# To add custom asides, create files in /source/_includes/custom/asides/
and add them to the list like 'custom/asides/custom_aside_name.html'
default_asides: 
[custom/asides/tag_cloud.html,
asides/recent_posts.html, asides/github.html, asides/twitter.html,
asides/delicious.html, asides/pinboard.html, asides/googleplus.html]
</pre>


<p></p>


<h1>Compile octopress</h1>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span>
<span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>rake generate</span><span class='line command'>rake preview</span></code></pre></td></tr></table></div></div>
        </div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Environment Variable on Ubuntu]]></title>
    <link href="http://NeoHsu.github.io/blog/2011/11/27/environment-variable-on-ubuntu/"/>
    <updated>2011-11-27T17:37:00+08:00</updated>
    <id>http://NeoHsu.github.io/blog/2011/11/27/environment-variable-on-ubuntu</id>
    <content type="html"><![CDATA[<h1>Profile &amp; Environment Difference</h1>

<ul>
<li>/etc/profile 是設定所有使用者環境變數的檔案</li>
<li>/etc/environment 是設定本機系统環境變數的檔案</li>
</ul>


<p>當進入登入畫面時，系統先取得 environment 裡的環境變數執行</p>

<pre><code>/etc/environment
</code></pre>

<p>當登錄系統時 shell 讀取環境變數的順序是 :</p>

<pre><code>/etc/profile -&gt; /etc/environment -&gt; $HOME/.profile 
</code></pre>

<h4>如果同一個環境變數在使用者環境變數( /etc/profile )和系统環境變數( /etc/environment )有不同的值那應該以使用者的環境變數為主</h4>

<p></p>


<h1>Environment Variable Document Difference</h1>

<ol>
<li><h4>/etc/profile :</h4>

<p>此文件為系統的每個用戶設置環境信息，當用戶第一次登錄時，該文件被執行，並從 /etc/profile.d 目錄的配置文件中蒐集 shell 的設置</p></li>
<li><h4>/etc/bashrc :</h4>

<p>此文件為每一個運行 bash shell 的用戶執行此文件，當 bash shell 被打開時，該文件被讀入</p></li>
<li><h4>~/.bash_profile :</h4>

<p>每個用戶都可使用該文件輸入專用於自己使用的 shell 信息，當用戶登錄時，該文件僅僅執行一次，默認情況下，他設置一些環境變數，執行用戶的 .bashrc 文件</p></li>
<li><h4>~/.bashrc :</h4>

<p>此文件包含專用於使用者的 bash shell 的 bash 信息，當登錄時以及每次打開新的 shell 時，則該文件被讀取</p></li>
<li><h4>~/.bash_logout :</h4>

<p>當每次退出系統(退出bash shell)時，執行該文件，另外 /etc/profile 中設定的變數可以作用於任何用戶，而 ~/.bashrc 等中設定的變數只能繼承 /etc/profile 中的變數，他們是父子關係</p></li>
<li><h4>~/.bash_profile :</h4>

<p>此文件是交互式 login 方式進入 bash 運行的， ~/.bashrc 是交互式 non-login 方式進入 bash 運行的通常二者設置大致相同，所以通常前者會調用後者</p></li>
</ol>


<p></p>


<h1>Conclusion</h1>

<p>環境變數盡量不要設定在 environment 檔裡面，主要原因為 environment 檔為系統環境主要設定檔案，因此如果發生錯誤可能會造成系統死當，如果設定為所有使用者皆使用的環境變數，應設定在 profile 檔裡面，如果個別使用者要使用的環境變數則設定在 .bashrc 較為恰當</p>

<figure class='code'><figcaption><span>Example </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>JAVA SDK 環境變數 -> /etc/profile 
</span><span class='line'>Android SDK -> ~/.bashrc
</span><span class='line'>Android NDK -> ~/.bashrc</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Install Sun JRE 6 On Ubuntu]]></title>
    <link href="http://NeoHsu.github.io/blog/2011/11/27/how-to-install-sun-jre-6-on-ubuntu/"/>
    <updated>2011-11-27T15:10:00+08:00</updated>
    <id>http://NeoHsu.github.io/blog/2011/11/27/how-to-install-sun-jre-6-on-ubuntu</id>
    <content type="html"><![CDATA[<h1>Outline</h1>

<ul>
<li>JRE 是建置 JAVA 執行環境的軟體</li>
<li>JRE 的內部有一個 Java 虛擬機器（JVM）以及一些標準的類別函數庫，協助 Java 程式運作</li>
<li>JRE 只能運行 JAVA 程式，無法開發 JAVA 程式</li>
</ul>


<p></p>


<h1>Development environment</h1>

<ul>
<li>Ubuntu 11.10 (x86-64)</li>
<li>Dell Studio XPS 1640</li>
</ul>


<p></p>


<h1>Method 1: Install a package by a PPA</h1>

<p>1.加入新的的PPA來源</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span>
<span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>sudo add-apt-repository ppa:ferramroberto/java</span><span class='line command'>sudo aptitude update</span></code></pre></td></tr></table></div></div>
        </div>


<p>2.Install Sun JRE &amp; Java Plugin</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>sudo aptitude install sun-java6-jre sun-java6-Plugin sun-java6-fonts</span></code></pre></td></tr></table></div></div>
        </div>


<h1>Method 2: Installing the JRE manually</h1>

<p>1.建立你要安裝的目錄並到該目錄下</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span>
<span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>mkdir -p ~/programs</span><span class='line command'>cd ~/programs</span></code></pre></td></tr></table></div></div>
        </div>


<p>2.Downloading JRE from the <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">Oracle Web site </a>,The file is bin file.</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>wget http://download.oracle.com/otn-pub/java/jdk/6u29-b11/jre-6u29-linux-x64.bin</span></code></pre></td></tr></table></div></div>
        </div>


<p>3.將下載的 JRE 設定為可執行的檔案並安裝</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span>
<span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>chmod +x jre-6u29-linux-x64.bin</span><span class='line command'>./jre-6u29-linux-x64.bin</span></code></pre></td></tr></table></div></div>
        </div>


<p>執行完後會在目錄下建立一個資料夾（jre1.6.0）這個資料夾是你安裝 JRE 的路徑</p>

<p>4.在 /etc/profile 檔案中設定環境變數</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>sudo vim /etc/profile</span></code></pre></td></tr></table></div></div>
        </div>


<p>在設定環境變數的檔案中加入下面參數</p>

<figure class='code'><figcaption><span>profile </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>export JAVA_HOME="/home/simonhsu/programs/jre1.6.0_29"
</span><span class='line'>export CLASSPATH=.:/JAVA_HOME/lib
</span><span class='line'>export PATH=$PATH:$JAVA_HOME/bin</span></code></pre></td></tr></table></div></figure>


<p>5.重新載入 /etc/profile 並重新開機</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span>
<span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>sudo source /etc/profile</span><span class='line command'>sudo init 6</span></code></pre></td></tr></table></div></div>
        </div>


<h4>These are the steps to install a JRE on your system.</h4>

<p></p>


<h1>If you need installed plugin to browser:</h1>

<h4>Firefox:</h4>

<p>1.建立瀏覽器的 Plugin 資料夾</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>mkdir -p ~/.mozilla/plugins</span></code></pre></td></tr></table></div></div>
        </div>


<p>2.建立Plugin的連結</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>ln -s ~/programs/jre1.6.0_29/lib/amd64/libnpjp2.so ~/.mozilla/plugins/</span></code></pre></td></tr></table></div></div>
        </div>


<h4>Chrome:</h4>

<p>1.建立Chrome瀏覽器的 Plugin 資料夾</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>mkdir -p /opt/google/chrome/plugins</span></code></pre></td></tr></table></div></div>
        </div>


<p>2.建立Plugin的連結</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>ln -s ~/programs/jre1.6.0_29/lib/amd64/libnpjp2.so /opt/google/chrome/plugins</span></code></pre></td></tr></table></div></div>
        </div>


<h1>Test JRE &amp; Plugin</h1>

<blockquote><p>Test Java Runtime Environment</p></blockquote>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span>
<span class='line-number'>&nbsp;</span>
<span class='line-number'>&nbsp;</span>
<span class='line-number'>&nbsp;</span></pre></td><td class='code'><pre><code><span class='line command'>java -version</span><span class='line output'>java version "1.6.0_29"
</span><span class='line output'>Java(TM) SE Runtime Environment (build 1.6.0_29-b11)
</span><span class='line output'>Java HotSpot(TM) 64-Bit Server VM (build 20.4-b02, mixed mode)</span></code></pre></td></tr></table></div></div>
        </div>


<blockquote><p>Test Browser Plugin</p></blockquote>

<p>Go <a href="http://java.com/en/download/testjava.jsp">How do I test whether Java is working on my computer?</a> website can test JRE Plugin</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Install Sun JDK 6 On Ubuntu]]></title>
    <link href="http://NeoHsu.github.io/blog/2011/11/27/how-to-install-sun-jdk-6-on-ubuntu/"/>
    <updated>2011-11-27T00:52:00+08:00</updated>
    <id>http://NeoHsu.github.io/blog/2011/11/27/how-to-install-sun-jdk-6-on-ubuntu</id>
    <content type="html"><![CDATA[<h1>Outline</h1>

<ul>
<li>JDK 提供開發人員的軟體開發工具並建置編譯與執行 JAVA 的開發環境</li>
<li>JDK 包含了 JAVA 開發工具外，還包含了 JRE 和 JVM</li>
<li>JDK 可以開發與運行 JAVA 程式</li>
</ul>


<p></p>


<h1>Development environment</h1>

<ul>
<li>Ubuntu 11.10 (x86-64)</li>
<li>Dell Studio XPS 1640</li>
</ul>


<p></p>


<h1>Method 1: Install a package by a PPA</h1>

<p>1.加入新的的PPA來源</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span>
<span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>sudo add-apt-repository ppa:ferramroberto/java</span><span class='line command'>sudo aptitude update</span></code></pre></td></tr></table></div></div>
        </div>


<p>2.Install Sun JDK &amp; Java Plugin</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>sudo aptitude install sun-java6-jdk sun-java6-plugin sun-java6-fonts</span></code></pre></td></tr></table></div></div>
        </div>


<h1>Method 2: Installing the JDK manually</h1>

<p>1.建立你的安裝的目錄並到該目錄下</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span>
<span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>mkdir -p ~/programs</span><span class='line command'>cd ~/programs</span></code></pre></td></tr></table></div></div>
        </div>


<p>2.Downloading JDK from the <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">Oracle Web site </a>,The file is bin file.</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>wget http://download.oracle.com/otn-pub/java/jdk/6u29-b11/jdk-6u29-linux-x64.bin</span></code></pre></td></tr></table></div></div>
        </div>


<p>3.將下載的 JDK 設定為可執行檔案並安裝</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span>
<span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>chmod +x jdk-6u29-linux-x64.bin</span><span class='line command'>./jdk-6u29-linux-x64.bin</span></code></pre></td></tr></table></div></div>
        </div>


<p>執行完後會在目錄下建立一個資料夾（jdk1.6.0）這個資料夾是你安裝 JDK 的路徑</p>

<p>4.在 /etc/profile 檔案中設定環境變數</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>sudo vim /etc/profile</span></code></pre></td></tr></table></div></div>
        </div>


<p>在設定環境變數的檔案中加入下面參數</p>

<figure class='code'><figcaption><span>profile </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>export JAVA_HOME="/home/simonhsu/programs/jdk1.6.0_29"
</span><span class='line'>export CLASSPATH=.:/JAVA_HOME/lib
</span><span class='line'>export PATH=$PATH:$JAVA_HOME/bin</span></code></pre></td></tr></table></div></figure>


<p>5.重新載入 /etc/profile 並重新開機</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span>
<span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>sudo source /etc/profile</span><span class='line command'>sudo init 6</span></code></pre></td></tr></table></div></div>
        </div>


<h4>These are the steps to install a JDK on your system.</h4>

<p></p>


<h1>If you need installed the plugin to browser:</h1>

<h4>Firefox:</h4>

<p>1.建立瀏覽器的 Plugin 資料夾</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>mkdir -p ~/.mozilla/plugins</span></code></pre></td></tr></table></div></div>
        </div>


<p>2.建立Plugin的連結</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>ln -s ~/programs/jdk1.6.0_29/jre/lib/amd64/libnpjp2.so ~/.mozilla/plugins/</span></code></pre></td></tr></table></div></div>
        </div>


<h4>Chrome:</h4>

<p>1.建立Chrome瀏覽器的 Plugin 資料夾</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>mkdir -p /opt/google/chrome/plugins</span></code></pre></td></tr></table></div></div>
        </div>


<p>2.建立Plugin的連結</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>ln -s ~/programs/jdk1.6.0_29/jre/lib/amd64/libnpjp2.so /opt/google/chrome/plugins</span></code></pre></td></tr></table></div></div>
        </div>


<h1>Test JDK &amp; Plugin</h1>

<blockquote><p>Test Java Development Kit</p></blockquote>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span>
<span class='line-number'>&nbsp;</span>
<span class='line-number'>&nbsp;</span>
<span class='line-number'>&nbsp;</span>
<span class='line-number'>&nbsp;</span>
<span class='line-number'>$</span>
<span class='line-number'>&nbsp;</span></pre></td><td class='code'><pre><code><span class='line command'>java -version</span><span class='line output'>java version "1.6.0_29"
</span><span class='line output'>Java(TM) SE Runtime Environment (build 1.6.0_29-b11)
</span><span class='line output'>Java HotSpot(TM) 64-Bit Server VM (build 20.4-b02, mixed mode)
</span><span class='line output'>
</span><span class='line command'>javac -version</span><span class='line output'>javac 1.6.0_29</span></code></pre></td></tr></table></div></div>
        </div>


<blockquote><p>Test Browser Plugin</p></blockquote>

<p>Go <a href="http://java.com/en/download/testjava.jsp">How do I test whether Java is working on my computer?</a> website can test JDK Plugin</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Install Octopress on Ubuntu]]></title>
    <link href="http://NeoHsu.github.io/blog/2011/11/24/how-to-install-octopress-on-ubuntu/"/>
    <updated>2011-11-24T01:54:00+08:00</updated>
    <id>http://NeoHsu.github.io/blog/2011/11/24/how-to-install-octopress-on-ubuntu</id>
    <content type="html"><![CDATA[<h1>Development environment</h1>

<ul>
<li>Ubuntu 11.10 (64 bit)</li>
<li>Dell Studio XPS 1640</li>
</ul>


<p></p>


<h1>Installation steps</h1>

<ol>
<li>Basic components</li>
<li>Git</li>
<li>RVM + Bundler</li>
<li>Octopress</li>
</ol>


<p></p>


<h1>Install basic components</h1>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>sudo aptitude install bash curl build-essential bison openssl <br>libreadline6 libreadline6-dev zlib1g zlib1g-dev libssl-dev <br>libyaml-dev libsqlite3-0 libsqlite3-dev sqlite3 libxml2-dev <br>libxslt-dev autoconf libc6-dev ncurses-dev automake</span></code></pre></td></tr></table></div></div>
        </div>


<h1>Install Git</h1>

<p>安裝Git並下載最新版本來重新編譯<br/>
build-dep : 會替你安裝build 所需要的所有package</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span>
<span class='line-number'>$</span>
<span class='line-number'>$</span>
<span class='line-number'>$</span>
<span class='line-number'>$</span>
<span class='line-number'>$</span>
<span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>sudo aptitude build-dep git-core</span><span class='line command'>wget http://git-core.googlecode.com/files/git-1.7.7.2.tar.gz</span><span class='line command'>tar xvzf git-1.7.7.2.tar.gz</span><span class='line command'>cd git-1.7.7.2/</span><span class='line command'>./configure</span><span class='line command'>make</span><span class='line command'>sudo make install</span></code></pre></td></tr></table></div></div>
        </div>


<h1>Install RVM &amp; Bundler</h1>

<p>Bundler : 用來管理Ruby程式</p>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span>
<span class='line-number'>$</span>
<span class='line-number'>$</span>
<span class='line-number'>$</span>
<span class='line-number'>$</span>
<span class='line-number'>$</span>
<span class='line-number'>$</span>
<span class='line-number'>$</span>
<span class='line-number'>$</span>
<span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>bash < <(curl -s https://rvm.beginrescueend.com/install/rvm)</span><span class='line command'>echo '[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm" # Load RVM function' >> ~/.bash_profile</span><span class='line command'>source .bash_profile</span><span class='line command'>rvm pkg install openssl</span><span class='line command'>rvm pkg install iconv</span><span class='line command'>rvm install 1.9.2 -C --with-openssl-dir=$HOME/.rvm/usr,--with-iconv-dir=$HOME/.rvm/usr</span><span class='line command'>rvm use 1.9.2 --default</span><span class='line command'>rvm reload</span><span class='line command'>rvm rubygems latest</span><span class='line command'>gem install bundler</span></code></pre></td></tr></table></div></div>
        </div>


<h1>Install Octopress</h1>

<div class="window">
          <nav class="control-window">
            <a href="#finder" class="close" data-rel="close">close</a>
            <a href="#" class="minimize">minimize</a>
            <a href="#" class="deactivate">deactivate</a>
          </nav>
          <h1 class="titleInside">Terminal</h1>
          <div class="container"><div class="terminal"><table><tr><td class='gutter'><pre class='line-numbers'><span class='line-number'>$</span>
<span class='line-number'>$</span>
<span class='line-number'>$</span>
<span class='line-number'>$</span></pre></td><td class='code'><pre><code><span class='line command'>git clone git://github.com/imathis/octopress.git octopress</span><span class='line command'>cd octopress</span><span class='line command'>bundle install</span><span class='line command'>rake install</span></code></pre></td></tr></table></div></div>
        </div>



]]></content>
  </entry>
  
</feed>
